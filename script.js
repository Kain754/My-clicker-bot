// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã

const smileysContainer = document.getElementById("smileys-container");

const heartsContainer = document.getElementById("hearts-container");

const gameOverDiv = document.getElementById("game-over");

const restartButton = document.getElementById("restart-button");

const scoreElement = document.getElementById("score");

const player = document.getElementById("player");

const joystick = document.getElementById("joystick");

const joystickContainer = document.getElementById("joystick-container");



// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã

let gameActive = true;

let smileyInterval;

let heartInterval;

let score = 0;



// –ú–∞—Å—Å–∏–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏

const happySmileys = ["üòä", "üòç", "üòé", "ü•∞", "ü§ó", "üòá", "üò≥"];



// –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞

let playerX = window.innerWidth / 2 - 20; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ —Ü–µ–Ω—Ç—Ä—É

player.style.left = `${playerX}px`;



// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∂–æ–π—Å—Ç–∏–∫–æ–º

let isDragging = false;

let joystickStartX = 0;

let joystickOffsetX = 0;



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∫–∞—Å–∞–Ω–∏—è (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º—ã—à–∏ –∏ —Ç–∞—á)

function getClientX(event) {

    return event.clientX || (event.touches && event.touches[0].clientX);

}





function startDrag(event) {

    isDragging = true;

    joystickStartX = getClientX(event);

}



function drag(event) {

    if (isDragging) {

        const moveX = getClientX(event) - joystickStartX;

        joystickOffsetX = moveX;



        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –¥–∂–æ–π—Å—Ç–∏–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞

        const maxOffset = joystickContainer.offsetWidth / 2 - joystick.offsetWidth / 2;

        if (joystickOffsetX < -maxOffset) joystickOffsetX = -maxOffset;

        if (joystickOffsetX > maxOffset) joystickOffsetX = maxOffset;



        joystick.style.transform = `translateX(${joystickOffsetX}px)`;



        // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞

        playerX += moveX * 0.05; // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è

        if (playerX < 0) playerX = 0;

        if (playerX > window.innerWidth - 40) playerX = window.innerWidth - 40;

        player.style.left = `${playerX}px`;



        joystickStartX = getClientX(event);

    }

}



function endDrag(event) {

    isDragging = false;

    joystickOffsetX = 0;

    joystick.style.transform = `translateX(0)`;

}



// Mouse events

joystick.addEventListener("mousedown", startDrag);

joystick.addEventListener("mousemove", drag);

joystick.addEventListener("mouseup", endDrag);

joystick.addEventListener("mouseleave", endDrag); // optional: release on mouse leave



// Touch events

joystick.addEventListener("touchstart", startDrag);

joystick.addEventListener("touchmove", drag);

joystick.addEventListener("touchend", endDrag);

joystick.addEventListener("touchcancel", endDrag);







// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–µ–ª—å–±–∞ —Å–µ—Ä–¥–µ—á–∫–∞–º–∏

heartInterval = setInterval(() => {

    if (gameActive) {

        createHeart(playerX + 20, window.innerHeight - 60);

    }

}, 1000);



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–¥–æ–≤–æ–ª—å–Ω–æ–≥–æ —Å–º–∞–π–ª–∏–∫–∞

function createSmiley() {

    if (!gameActive) return;



    const smiley = document.createElement("div");

    smiley.classList.add("smiley");

    smiley.textContent = "üò†";

    smiley.style.left = ${Math.random() * (window.innerWidth - 30)}px;

    smiley.style.top = "-30px";



    smileysContainer.appendChild(smiley);



    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–∞

    const fallInterval = setInterval(() => {

        if (!gameActive) {

            clearInterval(fallInterval);

            return;

        }



        const top = parseFloat(smiley.style.top);

        smiley.style.top = ${top + 2}px;



        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∏–∑–∞ —ç–∫—Ä–∞–Ω–∞

        if (top > window.innerHeight) {

            clearInterval(fallInterval);

            endGame();

        }



        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏

        const hearts = document.querySelectorAll(".heart");

        hearts.forEach(heart => {

            if (checkCollision(smiley, heart)) {

                // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Å–º–∞–π–ª–∏–∫–∞

                const randomSmiley = happySmileys[Math.floor(Math.random() * happySmileys.length)];

                smiley.textContent = randomSmiley;

                smiley.style.color = "green";

                clearInterval(fallInterval);

                setTimeout(() => smiley.remove(), 3000);



                // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞

                heart.remove();



                // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤

                score++;

                scoreElement.textContent = –û—á–∫–∏: ${score};

            }

        });

    }, 20);

}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–¥–µ—á–∫–∞

function createHeart(x, y) {

    if (!gameActive) return;



    const heart = document.createElement("div");

    heart.classList.add("heart");

    heart.textContent = "‚ù§Ô∏è";

    heart.style.left = ${x - 10}px;

    heart.style.top = ${y - 10}px;



    heartsContainer.appendChild(heart);



    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥—ä–µ–º–∞ —Å–µ—Ä–¥–µ—á–∫–∞

    const riseInterval = setInterval(() => {

        if (!gameActive) {

            clearInterval(riseInterval);

            return;

        }



        const top = parseFloat(heart.style.top);

        heart.style.top = ${top - 2}px;



        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –≤–µ—Ä—Ö–∞ —ç–∫—Ä–∞–Ω–∞

        if (top < -20) {

            clearInterval(riseInterval);

            heart.remove();

        }

    }, 20);

}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π

function checkCollision(element1, element2) {

    const rect1 = element1.getBoundingClientRect();

    const rect2 = element2.getBoundingClientRect();



    return (

        rect1.left < rect2.right &&

        rect1.right > rect2.left &&

        rect1.top < rect2.bottom &&

        rect1.bottom > rect2.top

    );

}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã

function endGame() {

    gameActive = false;

    clearInterval(smileyInterval);

    clearInterval(heartInterval);

    gameOverDiv.classList.remove("hidden");

}



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–Ω–æ–≤–æ"

restartButton.addEventListener("click", () => {

    gameActive = true;

    smileysContainer.innerHTML = "";

    heartsContainer.innerHTML = "";

    gameOverDiv.classList.add("hidden");

    score = 0;

    scoreElement.textContent = –û—á–∫–∏: ${score};

    smileyInterval = setInterval(createSmiley, 1000);

    heartInterval = setInterval(() => {

        if (gameActive) {

            createHeart(playerX + 20, window.innerHeight - 60);

        }

    }, 1000);

});



// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã

smileyInterval = setInterval(createSmiley, 1000);

