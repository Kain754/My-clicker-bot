const smileysContainer = document.getElementById("smileys-container");
const heartsContainer = document.getElementById("hearts-container");
const gameOverDiv = document.getElementById("game-over");
const restartButton = document.getElementById("restart-button");
const scoreElement = document.getElementById("score");
const player = document.getElementById("player");

let gameActive = true;
let smileyInterval;
let heartInterval;
let score = 0;

// –ú–∞—Å—Å–∏–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏
const happySmileys = ["üòä", "üòç", "üòé", "ü•∞", "ü§ó", "üòá", "üò≥"];

// –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞
let playerX = window.innerWidth / 2 - 20; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ —Ü–µ–Ω—Ç—Ä—É
player.style.left = `${playerX}px`;

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞
let isDragging = false;
let startX = 0;

document.addEventListener("mousedown", (event) => {
    isDragging = true;
    startX = event.clientX;
});

document.addEventListener("mousemove", (event) => {
    if (isDragging) {
        const moveX = event.clientX - startX;
        playerX += moveX;

        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞
        if (playerX < 0) playerX = 0;
        if (playerX > window.innerWidth - 40) playerX = window.innerWidth - 40;

        player.style.left = `${playerX}px`;
        startX = event.clientX;
    }
});

document.addEventListener("mouseup", () => {
    isDragging = false;
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–µ–ª—å–±–∞ —Å–µ—Ä–¥–µ—á–∫–∞–º–∏
heartInterval = setInterval(() => {
    if (gameActive) {
        createHeart(playerX + 20, window.innerHeight - 60);
    }
}, 1000);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–¥–æ–≤–æ–ª—å–Ω–æ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
function createSmiley() {
    if (!gameActive) return;

    const smiley = document.createElement("div");
    smiley.classList.add("smiley");
    smiley.textContent = "üò†";
    smiley.style.left = `${Math.random() * (window.innerWidth - 30)}px`;
    smiley.style.top = "-30px";

    smileysContainer.appendChild(smiley);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–∞
    const fallInterval = setInterval(() => {
        if (!gameActive) {
            clearInterval(fallInterval);
            return;
        }

        const top = parseFloat(smiley.style.top);
        smiley.style.top = `${top + 2}px`;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∏–∑–∞ —ç–∫—Ä–∞–Ω–∞
        if (top > window.innerHeight) {
            clearInterval(fallInterval);
            endGame();
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏
        const hearts = document.querySelectorAll(".heart");
        hearts.forEach(heart => {
            if (checkCollision(smiley, heart)) {
                // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Å–º–∞–π–ª–∏–∫–∞
                const randomSmiley = happySmileys[Math.floor(Math.random() * happySmileys.length)];
                smiley.textContent = randomSmiley;
                smiley.style.color = "green";
                clearInterval(fallInterval);
                setTimeout(() => smiley.remove(), 3000);

                // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞
                heart.remove();

                // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤
                score++;
                scoreElement.textContent = `–û—á–∫–∏: ${score}`;
            }
        });
    }, 20);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–¥–µ—á–∫–∞
function createHeart(x, y) {
    if (!gameActive) return;

    const heart = document.createElement("div");
    heart.classList.add("heart");
    heart.textContent = "‚ù§Ô∏è";
    heart.style.left = `${x - 10}px`;
    heart.style.top = `${y - 10}px`;

    heartsContainer.appendChild(heart);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥—ä–µ–º–∞ —Å–µ—Ä–¥–µ—á–∫–∞
    const riseInterval = setInterval(() => {
        if (!gameActive) {
            clearInterval(riseInterval);
            return;
        }

        const top = parseFloat(heart.style.top);
        heart.style.top = `${top - 2}px`;

        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –≤–µ—Ä—Ö–∞ —ç–∫—Ä–∞–Ω–∞
        if (top < -20) {
            clearInterval(riseInterval);
            heart.remove();
        }
    }, 20);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
function checkCollision(element1, element2) {
    const rect1 = element1.getBoundingClientRect();
    const rect2 = element2.getBoundingClientRect();

    return (
        rect1.left < rect2.right &&
        rect1.right > rect2.left &&
        rect1.top < rect2.bottom &&
        rect1.bottom > rect2.top
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
function endGame() {
    gameActive = false;
    clearInterval(smileyInterval);
    clearInterval(heartInterval);
    gameOverDiv.classList.remove("hidden");
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–Ω–æ–≤–æ"
restartButton.addEventListener("click", () => {
    gameActive = true;
    smileysContainer.innerHTML = "";
    heartsContainer.innerHTML = "";
    gameOverDiv.classList.add("hidden");
    score = 0;
    scoreElement.textContent = `–û—á–∫–∏: ${score}`;
    smileyInterval = setInterval(createSmiley, 1000);
    heartInterval = setInterval(() => {
        if (gameActive) {
            createHeart(playerX + 20, window.innerHeight - 60);
        }
    }, 1000);
});

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
smileyInterval = setInterval(createSmiley, 1000);
